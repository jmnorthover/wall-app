{"version":3,"sources":["Components/Post.js","Services/users.js","Services/posts.js","Components/AddPostForm.js","Components/Wall.js","Components/HomeSelect.js","Components/SignIn.js","Components/Register.js","Components/Home.js","Components/App.js","index.js"],"names":["Post","post","className","author","username","content","token","setToken","newToken","registerUser","email","password","a","reqBody","JSON","stringify","fetch","method","headers","body","response","ok","json","errorBody","Error","error","signInUser","getWallPosts","resData","posts","addNewPost","postContent","Authorization","resBody","AddPostForm","setPosts","useState","setPostContent","onSubmit","e","preventDefault","then","newPostArray","catch","console","log","message","required","value","onChange","target","type","Wall","user","setUser","useEffect","fetchedPosts","addPost","postComponents","map","key","_id","onClick","length","HomeSelect","setSelection","SignIn","setUsername","setPassword","errorMessage","setErrorMessage","minLength","maxLength","placeholder","Register","setEmail","Home","selection","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yWAYeA,G,MATF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACd,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,UAAf,WAAiCD,EAAKE,OAAOC,UAC7C,yBAAKF,UAAU,WAAWD,EAAKI,Y,8BCP1BC,EAAQ,GAGNC,EAAW,SAACC,GACvBF,EAAQE,GAIGC,EAAY,uCAAG,WAAOC,EAAON,EAAUO,GAAxB,qBAAAC,EAAA,6DACpBC,EAAUC,KAAKC,UAAU,CAAEL,QAAON,WAAUO,aADxB,SAGHK,MAAM,sBAAuB,CAClDC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMN,IARkB,YAGpBO,EAHoB,QAWbC,GAXa,iCAYLD,EAASE,OAZJ,cAYlBH,EAZkB,OAaxBZ,EAASY,EAAKb,OAbU,kBAcjBa,EAAKf,UAdY,yBAgBAgB,EAASE,OAhBT,cAgBlBC,EAhBkB,OAiBlB,IAAIC,MAAMD,EAAUE,OAjBF,4CAAH,0DAsBZC,EAAU,uCAAG,WAAOtB,EAAUO,GAAjB,qBAAAC,EAAA,6DAClBC,EAAUC,KAAKC,UAAU,CAAEX,WAAUO,aADnB,SAGDK,MAAM,mBAAoB,CAC/CC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMN,IARgB,YAGlBO,EAHkB,QAWXC,GAXW,iCAYHD,EAASE,OAZN,cAYhBH,EAZgB,OAatBZ,EAASY,EAAKb,OAbQ,kBAcfa,EAAKf,UAdU,yBAgBEgB,EAASE,OAhBX,cAgBhBC,EAhBgB,OAiBhB,IAAIC,MAAMD,EAAUE,OAjBJ,4CAAH,wDC1BVE,EAAY,uCAAG,8BAAAf,EAAA,sEACHI,MAAM,cADH,cACpBI,EADoB,gBAEJA,EAASE,OAFL,cAEpBM,EAFoB,yBAGnBA,EAAQC,OAHW,2CAAH,qDAQZC,EAAU,uCAAG,WAAOC,GAAP,mBAAAnB,EAAA,6DAClBC,EAAUC,KAAKC,UAAU,CAAEgB,gBADT,SAGDf,MAAM,aAAc,CACzCC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBc,cAAe1B,GAEjBa,KAAMN,IATgB,YAGlBO,EAHkB,QAYXC,GAZW,iCAaAD,EAASE,OAbT,cAahBW,EAbgB,yBAcfA,GAde,cAgBhB,IAAIT,MAAM,sBAhBM,4CAAH,sDCmBRU,G,MA3BK,SAAC,GAAyB,IAAvBL,EAAsB,EAAtBA,MAAOM,EAAe,EAAfA,SAAe,EACLC,mBAAS,IADJ,mBACpCL,EADoC,KACvBM,EADuB,KAa3C,OACE,yBAAKnC,UAAU,iBACb,0BAAMoC,SAZW,SAACC,GACpBA,EAAEC,iBACFV,EAAWC,GACRU,MAAK,SAACR,GACL,IAAMS,EAAY,CAAIT,GAAJ,mBAAgBJ,IAClCM,EAASO,MAEVC,OAAM,SAAClB,GAAD,OAAWmB,QAAQC,IAAIpB,EAAMqB,cAMlC,8BACEC,UAAQ,EACRC,MAAOjB,EACPkB,SAAU,SAACV,GAAD,OAAOF,EAAeE,EAAEW,OAAOF,UAE3C,4BAAQG,KAAK,UAAb,gBC6BOC,G,MA3CF,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAAc,EACRlB,mBAAS,IADD,mBAC3BP,EAD2B,KACpBM,EADoB,KAOlCoB,qBAAU,WACR5B,IAAec,MAAK,SAACe,GAAD,OAAkBrB,EAASqB,QAC9C,IAEH,IAMMC,EACK,UAATJ,GAGE,kBAAC,EAAD,CAAaxB,MAAOA,EAAOM,SAAUA,IAInCuB,EAAiB7B,EAAM8B,KAAI,SAAC1D,GAAD,OAC/B,kBAAC,EAAD,CAAMA,KAAMA,EAAM2D,IAAK3D,EAAK4D,SAG9B,OACE,yBAAK3D,UAAU,QACb,wCACA,6CAAmBmD,GACnB,4BAAQnD,UAAU,kBAAkB4D,QAtBxB,WACdvD,EAAS,IACT+C,EAAQ,MAoBN,YAGCG,EACD,yBAAKvD,UAAU,cAAf,uBAAiD2B,EAAMkC,OAAvD,UACA,yBAAK7D,UAAU,SAASwD,MCnCfM,G,MAVI,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,aAAcX,EAAc,EAAdA,QAClC,OACE,yBAAKpD,UAAU,kBACb,4BAAQ4D,QAAS,kBAAMG,EAAa,KAApC,WACA,4BAAQH,QAAS,kBAAMG,EAAa,KAApC,YACA,4BAAQH,QAAS,kBAAMR,EAAQ,WAA/B,wBCsCSY,G,MA1CA,SAAC,GAA+B,IAA7BD,EAA4B,EAA5BA,aAAcX,EAAc,EAAdA,QAAc,EACZlB,mBAAS,IADG,mBACrChC,EADqC,KAC3B+D,EAD2B,OAEZ/B,mBAAS,IAFG,mBAErCzB,EAFqC,KAE3ByD,EAF2B,OAGJhC,mBAAS,IAHL,mBAGrCiC,EAHqC,KAGvBC,EAHuB,KAY5C,OACE,yBAAKpE,UAAU,WACb,uCACCmE,GAAgB,yBAAKnE,UAAU,SAASmE,GACzC,0BAAM/B,SAXK,SAACC,GACdA,EAAEC,iBACFd,EAAWtB,EAAUO,GAClB8B,MAAK,SAACY,GAAD,OAAUC,EAAQD,MACvBV,OAAM,SAAClB,GAAD,OAAW6C,EAAgB7C,EAAMqB,cAQtC,2BACEC,UAAQ,EACRwB,UAAU,IACVC,UAAU,KACVrB,KAAK,OACLsB,YAAY,WACZzB,MAAO5C,EACP6C,SAAU,SAACV,GAAD,OAAO4B,EAAY5B,EAAEW,OAAOF,UAExC,2BACED,UAAQ,EACRwB,UAAU,IACVC,UAAU,KACVrB,KAAK,WACLsB,YAAY,WACZzB,MAAOrC,EACPsC,SAAU,SAACV,GAAD,OAAO6B,EAAY7B,EAAEW,OAAOF,UAExC,4BAAQG,KAAK,UAAb,WAEF,4BAAQW,QAAS,kBAAMG,EAAa,KAApC,cCaSS,G,MAlDE,SAAC,GAA+B,IAA7BT,EAA4B,EAA5BA,aAAcX,EAAc,EAAdA,QAAc,EACpBlB,mBAAS,IADW,mBACvC1B,EADuC,KAChCiE,EADgC,OAEdvC,mBAAS,IAFK,mBAEvChC,EAFuC,KAE7B+D,EAF6B,OAGd/B,mBAAS,IAHK,mBAGvCzB,EAHuC,KAG7ByD,EAH6B,OAINhC,mBAAS,IAJH,mBAIvCiC,EAJuC,KAIzBC,EAJyB,KAa9C,OACE,yBAAKpE,UAAU,YACb,wCACCmE,GAAgB,yBAAKnE,UAAU,SAASmE,GACzC,0BAAM/B,SAXK,SAACC,GACdA,EAAEC,iBACF/B,EAAaC,EAAON,EAAUO,GAC3B8B,MAAK,SAACY,GAAD,OAAUC,EAAQD,MACvBV,OAAM,SAAClB,GAAD,OAAW6C,EAAgB7C,EAAMqB,cAQtC,2BACEC,UAAQ,EACRI,KAAK,OACLsB,YAAY,iBACZzB,MAAOtC,EACPuC,SAAU,SAACV,GAAD,OAAOoC,EAASpC,EAAEW,OAAOF,UAErC,2BACED,UAAQ,EACRwB,UAAU,IACVC,UAAU,KACVrB,KAAK,OACLsB,YAAY,WACZzB,MAAO5C,EACP6C,SAAU,SAACV,GAAD,OAAO4B,EAAY5B,EAAEW,OAAOF,UAExC,2BACED,UAAQ,EACRwB,UAAU,IACVC,UAAU,KACVrB,KAAK,WACLsB,YAAY,WACZzB,MAAOrC,EACPsC,SAAU,SAACV,GAAD,OAAO6B,EAAY7B,EAAEW,OAAOF,UAExC,4BAAQG,KAAK,UAAb,WAEF,4BAAQW,QAAS,kBAAMG,EAAa,KAApC,cCtBSW,G,MArBF,SAAC,GAAiB,IAGzBvE,EAHUiD,EAAc,EAAdA,QAAc,EACMlB,mBAAS,GADf,mBACrByC,EADqB,KACVZ,EADU,KAa5B,OARkB,IAAdY,EACFxE,EAAU,kBAAC,EAAD,CAAY4D,aAAcA,EAAcX,QAASA,IACpC,IAAduB,EACTxE,EAAU,kBAAC,EAAD,CAAQ4D,aAAcA,EAAcX,QAASA,IAChC,IAAduB,IACTxE,EAAU,kBAAC,EAAD,CAAU4D,aAAcA,EAAcX,QAASA,KAIzD,yBAAKpD,UAAU,QACb,wCACA,6BAAMG,M,MCFGyE,MAhBf,WAAgB,IAAD,EACW1C,mBAAS,IADpB,mBACNiB,EADM,KACAC,EADA,KAOPjD,EAAUgD,EACd,kBAAC,EAAD,CAAMA,KAAMA,EAAMC,QAASA,IAE3B,kBAAC,EAAD,CAAMA,QAASA,IAGjB,OAAO,yBAAKpD,UAAU,OAAOG,ICb/B0E,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.acd9aa50.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../ComponentStyles/Post.css';\r\n\r\nconst Post = ({ post }) => {\r\n  return (\r\n    <div className=\"post\">\r\n      <div className=\"author\">Post by {post.author.username}</div>\r\n      <div className=\"content\">{post.content}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","export let token = '';\r\n\r\n// updates token when user registers, signs in, or signs out\r\nexport const setToken = (newToken) => {\r\n  token = newToken;\r\n};\r\n\r\n// sends a request to register a new user\r\nexport const registerUser = async (email, username, password) => {\r\n  const reqBody = JSON.stringify({ email, username, password });\r\n\r\n  const response = await fetch('/api/users/register', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: reqBody,\r\n  });\r\n\r\n  if (response.ok) {\r\n    const body = await response.json();\r\n    setToken(body.token);\r\n    return body.username;\r\n  } else {\r\n    const errorBody = await response.json();\r\n    throw new Error(errorBody.error);\r\n  }\r\n};\r\n\r\n// sends a request to sign in an existing user\r\nexport const signInUser = async (username, password) => {\r\n  const reqBody = JSON.stringify({ username, password });\r\n\r\n  const response = await fetch('/api/users/login', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: reqBody,\r\n  });\r\n\r\n  if (response.ok) {\r\n    const body = await response.json();\r\n    setToken(body.token);\r\n    return body.username;\r\n  } else {\r\n    const errorBody = await response.json();\r\n    throw new Error(errorBody.error);\r\n  }\r\n};\r\n","// token is needed to add new post\r\nimport { token } from './users';\r\n\r\n// fetches existing wall posts and returns an array of post objects\r\nexport const getWallPosts = async () => {\r\n  const response = await fetch('/api/posts');\r\n  const resData = await response.json();\r\n  return resData.posts;\r\n};\r\n\r\n/* sends a request to add a new post and returns the details of the new post\r\n   if successful */\r\nexport const addNewPost = async (postContent) => {\r\n  const reqBody = JSON.stringify({ postContent });\r\n\r\n  const response = await fetch('/api/posts', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: token,\r\n    },\r\n    body: reqBody,\r\n  });\r\n\r\n  if (response.ok) {\r\n    const resBody = await response.json();\r\n    return resBody;\r\n  } else {\r\n    throw new Error('Failed to add post');\r\n  }\r\n};\r\n","import React, { useState } from 'react';\r\nimport { addNewPost } from '../Services/posts';\r\nimport '../ComponentStyles/AddPostForm.css';\r\n\r\nconst AddPostForm = ({ posts, setPosts }) => {\r\n  const [postContent, setPostContent] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addNewPost(postContent)\r\n      .then((resBody) => {\r\n        const newPostArray = [resBody, ...posts];\r\n        setPosts(newPostArray);\r\n      })\r\n      .catch((error) => console.log(error.message));\r\n  };\r\n\r\n  return (\r\n    <div className=\"add_post_form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea\r\n          required\r\n          value={postContent}\r\n          onChange={(e) => setPostContent(e.target.value)}\r\n        ></textarea>\r\n        <button type=\"submit\">Add Post</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPostForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Post from './Post';\r\nimport AddPostForm from './AddPostForm';\r\nimport { getWallPosts } from '../Services/posts';\r\nimport { setToken } from '../Services/users';\r\nimport '../ComponentStyles/Wall.css';\r\n\r\n/*\r\n  Displays existing wall posts and gives the user the ability to add a new post\r\n  if they are signed in\r\n*/\r\nconst Wall = ({ user, setUser }) => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  /* \r\n    fetch existing wall posts from server when component renders for the\r\n    first time \r\n  */\r\n  useEffect(() => {\r\n    getWallPosts().then((fetchedPosts) => setPosts(fetchedPosts));\r\n  }, []);\r\n\r\n  const signOut = () => {\r\n    setToken('');\r\n    setUser('');\r\n  };\r\n\r\n  // only display add post form if user is signed in and not a guest\r\n  const addPost =\r\n    user === 'Guest' ? (\r\n      false\r\n    ) : (\r\n      <AddPostForm posts={posts} setPosts={setPosts} />\r\n    );\r\n\r\n  // create post component for each post\r\n  const postComponents = posts.map((post) => (\r\n    <Post post={post} key={post._id} />\r\n  ));\r\n\r\n  return (\r\n    <div className=\"wall\">\r\n      <h1>Wall App</h1>\r\n      <div>Signed in as {user}</div>\r\n      <button className=\"sign_out_button\" onClick={signOut}>\r\n        Sign Out\r\n      </button>\r\n      {addPost}\r\n      <div className=\"post_count\">There are currently {posts.length} posts</div>\r\n      <div className=\"posts\">{postComponents}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wall;\r\n","import React from 'react';\r\nimport '../ComponentStyles/HomeSelect.css';\r\n\r\n// Presents options for sign in, register, or guest\r\nconst HomeSelect = ({ setSelection, setUser }) => {\r\n  return (\r\n    <div className=\"select_buttons\">\r\n      <button onClick={() => setSelection(1)}>Sign In</button>\r\n      <button onClick={() => setSelection(2)}>Register</button>\r\n      <button onClick={() => setUser('Guest')}>Continue as Guest</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeSelect;\r\n","import React, { useState } from 'react';\r\nimport { signInUser } from '../Services/users';\r\nimport '../ComponentStyles/SignIn.css';\r\n\r\n// Sign in component for existing users\r\nconst SignIn = ({ setSelection, setUser }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    signInUser(username, password)\r\n      .then((user) => setUser(user))\r\n      .catch((error) => setErrorMessage(error.message));\r\n  };\r\n\r\n  return (\r\n    <div className=\"sign_in\">\r\n      <h2>Sign In</h2>\r\n      {errorMessage && <div className=\"error\">{errorMessage}</div>}\r\n      <form onSubmit={submit}>\r\n        <input\r\n          required\r\n          minLength=\"6\"\r\n          maxLength=\"30\"\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <input\r\n          required\r\n          minLength=\"6\"\r\n          maxLength=\"30\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n      <button onClick={() => setSelection(0)}>Go Back</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import React, { useState } from 'react';\r\nimport { registerUser } from '../Services/users';\r\nimport '../ComponentStyles/Register.css';\r\n\r\n// Register component for new users\r\nconst Register = ({ setSelection, setUser }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    registerUser(email, username, password)\r\n      .then((user) => setUser(user))\r\n      .catch((error) => setErrorMessage(error.message));\r\n  };\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <h2>Register</h2>\r\n      {errorMessage && <div className=\"error\">{errorMessage}</div>}\r\n      <form onSubmit={submit}>\r\n        <input\r\n          required\r\n          type=\"text\"\r\n          placeholder=\"E-Mail Address\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <input\r\n          required\r\n          minLength=\"6\"\r\n          maxLength=\"30\"\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <input\r\n          required\r\n          minLength=\"6\"\r\n          maxLength=\"30\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n      <button onClick={() => setSelection(0)}>Go Back</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState } from 'react';\r\nimport HomeSelect from './HomeSelect';\r\nimport SignIn from './SignIn';\r\nimport Register from './Register';\r\nimport '../ComponentStyles/Home.css';\r\n\r\n// Home component gives users the options to sign in, register, or choose guest\r\nconst Home = ({ setUser }) => {\r\n  const [selection, setSelection] = useState(0);\r\n\r\n  let content;\r\n\r\n  if (selection === 0) {\r\n    content = <HomeSelect setSelection={setSelection} setUser={setUser} />;\r\n  } else if (selection === 1) {\r\n    content = <SignIn setSelection={setSelection} setUser={setUser} />;\r\n  } else if (selection === 2) {\r\n    content = <Register setSelection={setSelection} setUser={setUser} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <h1>Wall App</h1>\r\n      <div>{content}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react';\nimport Wall from './Wall';\nimport Home from './Home';\nimport '../ComponentStyles/App.css';\n\nfunction App() {\n  const [user, setUser] = useState('');\n\n  /*\n    If a user is signed in or continued as guest, render the Wall component\n    Otherwise, show the Home component so that they can log in, register, or choose guest\n  */\n  const content = user ? (\n    <Wall user={user} setUser={setUser} />\n  ) : (\n    <Home setUser={setUser} />\n  );\n\n  return <div className=\"App\">{content}</div>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}